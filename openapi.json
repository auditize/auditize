{
    "openapi": "3.1.0",
    "info": {
        "title": "Auditize",
        "description": "Auditize API",
        "version": "0.7.1"
    },
    "paths": {
        "/api/auth/access-token": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Generate access token",
                "operationId": "generate_access_token",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccessTokenRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccessTokenResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/repos/{repo_id}/logs/actions/types": {
            "get": {
                "tags": [
                    "log"
                ],
                "summary": "List log action types",
                "description": "Requires `log:read` permission.",
                "operationId": "list_log_action_types",
                "parameters": [
                    {
                        "name": "repo_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NameListResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/repos/{repo_id}/logs/actions/categories": {
            "get": {
                "tags": [
                    "log"
                ],
                "summary": "List log action categories",
                "description": "Requires `log:read` permission.",
                "operationId": "list_log_action_categories",
                "parameters": [
                    {
                        "name": "repo_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NameListResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/repos/{repo_id}/logs/actors/types": {
            "get": {
                "tags": [
                    "log"
                ],
                "summary": "List log actor types",
                "description": "Requires `log:read` permission.",
                "operationId": "list_log_actor_types",
                "parameters": [
                    {
                        "name": "repo_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NameListResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/repos/{repo_id}/logs/actors/extras": {
            "get": {
                "tags": [
                    "log"
                ],
                "summary": "List log actor custom field names",
                "description": "Requires `log:read` permission.",
                "operationId": "list_log_actor_extras",
                "parameters": [
                    {
                        "name": "repo_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NameListResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/repos/{repo_id}/logs/resources/types": {
            "get": {
                "tags": [
                    "log"
                ],
                "summary": "List log resource types",
                "description": "Requires `log:read` permission.",
                "operationId": "list_log_resource_types",
                "parameters": [
                    {
                        "name": "repo_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NameListResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/repos/{repo_id}/logs/resources/extras": {
            "get": {
                "tags": [
                    "log"
                ],
                "summary": "List log resource custom field names",
                "description": "Requires `log:read` permission.",
                "operationId": "list_log_resource_extras",
                "parameters": [
                    {
                        "name": "repo_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NameListResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/repos/{repo_id}/logs/tags/types": {
            "get": {
                "tags": [
                    "log"
                ],
                "summary": "List log tag types",
                "description": "Requires `log:read` permission.",
                "operationId": "list_log_tag_types",
                "parameters": [
                    {
                        "name": "repo_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NameListResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/repos/{repo_id}/logs/sources": {
            "get": {
                "tags": [
                    "log"
                ],
                "summary": "List log source field names",
                "description": "Requires `log:read` permission.",
                "operationId": "list_log_source_fields",
                "parameters": [
                    {
                        "name": "repo_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NameListResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/repos/{repo_id}/logs/details": {
            "get": {
                "tags": [
                    "log"
                ],
                "summary": "List log detail field names",
                "description": "Requires `log:read` permission.",
                "operationId": "list_log_detail_fields",
                "parameters": [
                    {
                        "name": "repo_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NameListResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/repos/{repo_id}/logs/attachments/types": {
            "get": {
                "tags": [
                    "log"
                ],
                "summary": "List log attachment types",
                "description": "Requires `log:read` permission.",
                "operationId": "list_log_attachment_types",
                "parameters": [
                    {
                        "name": "repo_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NameListResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/repos/{repo_id}/logs/attachments/mime-types": {
            "get": {
                "tags": [
                    "log"
                ],
                "summary": "List log attachment MIME types",
                "description": "Requires `log:read` permission.",
                "operationId": "list_log_attachment_mime_types",
                "parameters": [
                    {
                        "name": "repo_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NameListResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/repos/{repo_id}/logs/entities": {
            "get": {
                "tags": [
                    "log"
                ],
                "summary": "List log entities",
                "description": "Requires `log:read` permission.",
                "operationId": "list_log_entities",
                "parameters": [
                    {
                        "name": "repo_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "root",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "parent_entity_ref",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LogEntityListResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/repos/{repo_id}/logs/entities/ref:{entity_ref}": {
            "get": {
                "tags": [
                    "log"
                ],
                "summary": "Get log entity",
                "description": "Requires `log:read` permission.",
                "operationId": "get_log_entity",
                "parameters": [
                    {
                        "name": "repo_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "entity_ref",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Entity ref"
                        },
                        "description": "Entity ref"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LogEntityResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/repos/{repo_id}/logs": {
            "post": {
                "tags": [
                    "log"
                ],
                "summary": "Create a log",
                "description": "Requires `log:write` permission.",
                "operationId": "create_log",
                "parameters": [
                    {
                        "name": "repo_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LogCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LogResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiValidationErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "log"
                ],
                "summary": "List logs",
                "description": "Requires `log:read` permission.\n\nThis endpoint also accepts search on custom fields through the extra parameters:\n- `source.<custom-field>`\n- `actor.<custom-field>`\n- `resource.<custom-field>`\n- `details.<custom-field>`\n\nExample: `/repos/{repo_id}/logs?actor.role=admin`",
                "operationId": "list_logs",
                "parameters": [
                    {
                        "name": "repo_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "action_type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action_category",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "actor_type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "actor_name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "actor_ref",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "resource_type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "resource_name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "resource_ref",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "tag_ref",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "tag_type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "tag_name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "has_attachment",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "attachment_name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "attachment_type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "attachment_mime_type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "entity_ref",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "since",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "until",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LogListResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/repos/{repo_id}/logs/{log_id}/attachments": {
            "post": {
                "tags": [
                    "log"
                ],
                "summary": "Add a file attachment to a log",
                "description": "Requires `log:write` permission.",
                "operationId": "add_log_attachment",
                "parameters": [
                    {
                        "name": "repo_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "log_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The ID of the log to attach the file to"
                        },
                        "description": "The ID of the log to attach the file to"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_add_log_attachment"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "Payload too large",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/repos/{repo_id}/logs/csv": {
            "get": {
                "tags": [
                    "log"
                ],
                "summary": "List logs as CSV file",
                "description": "Requires `log:read` permission.\n\nThis endpoint also accepts search on custom fields through the extra parameters:\n- `source.<custom-field>`\n- `actor.<custom-field>`\n- `resource.<custom-field>`\n- `details.<custom-field>`\n\nExample: `/repos/{repo_id}/logs?actor.role=admin`",
                "operationId": "list_logs_csv",
                "parameters": [
                    {
                        "name": "repo_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "columns",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "description": "\nComma-separated list of columns to include in the CSV output. Available columns are:\n- `log_id`\n- `saved_at`\n- `action_type`\n- `action_category`\n- `actor_ref`\n- `actor_type`\n- `actor_name`\n- `resource_ref`\n- `resource_type`\n- `resource_name`\n- `tag_ref`\n- `tag_type`\n- `tag_name`\n- `attachment_name`\n- `attachment_type`\n- `attachment_mime_type`\n- `entity_path:ref`\n- `entity_path:name`\n- `source.<custom-field>`\n- `actor.<custom-field>`\n- `resource.<custom-field>`\n- `details.<custom-field>`\n\nExample of column name if you have a \"role\" custom field for the actor: `actor.role`.\n\n",
                            "default": "log_id,saved_at,action_type,action_category,actor_ref,actor_type,actor_name,resource_ref,resource_type,resource_name,tag_ref,tag_type,tag_name,attachment_name,attachment_type,attachment_mime_type,entity_path:ref,entity_path:name"
                        },
                        "description": "\nComma-separated list of columns to include in the CSV output. Available columns are:\n- `log_id`\n- `saved_at`\n- `action_type`\n- `action_category`\n- `actor_ref`\n- `actor_type`\n- `actor_name`\n- `resource_ref`\n- `resource_type`\n- `resource_name`\n- `tag_ref`\n- `tag_type`\n- `tag_name`\n- `attachment_name`\n- `attachment_type`\n- `attachment_mime_type`\n- `entity_path:ref`\n- `entity_path:name`\n- `source.<custom-field>`\n- `actor.<custom-field>`\n- `resource.<custom-field>`\n- `details.<custom-field>`\n\nExample of column name if you have a \"role\" custom field for the actor: `actor.role`.\n\n"
                    },
                    {
                        "name": "action_type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action_category",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "actor_type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "actor_name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "actor_ref",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "resource_type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "resource_name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "resource_ref",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "tag_ref",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "tag_type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "tag_name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "has_attachment",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "attachment_name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "attachment_type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "attachment_mime_type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "entity_ref",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "since",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "until",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "text/csv": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/csv": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "text/csv": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "text/csv": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/repos/{repo_id}/logs/{log_id}": {
            "get": {
                "tags": [
                    "log"
                ],
                "summary": "Get log",
                "description": "Requires `log:read` permission.",
                "operationId": "get_log",
                "parameters": [
                    {
                        "name": "repo_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "log_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Log ID"
                        },
                        "description": "Log ID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LogResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/repos/{repo_id}/logs/{log_id}/attachments/{attachment_idx}": {
            "get": {
                "tags": [
                    "log"
                ],
                "summary": "Download a log attachment",
                "description": "Requires `log:read` permission.",
                "operationId": "get_log_attachment",
                "parameters": [
                    {
                        "name": "repo_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "log_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Log ID"
                        },
                        "description": "Log ID"
                    },
                    {
                        "name": "attachment_idx",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "The index of the attachment in the log's attachments list (starts from 0)"
                        },
                        "description": "The index of the attachment in the log's attachments list (starts from 0)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Attachment content. The actual MIME type will be the MIME type of the attachment when it was uploaded.",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/repos": {
            "post": {
                "tags": [
                    "repo"
                ],
                "summary": "Create log repository",
                "description": "Requires `repo:write` permission.",
                "operationId": "create_repo",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RepoCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RepoResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Constraint violation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "repo"
                ],
                "summary": "List log repositories",
                "description": "Requires `repo:read` permission.",
                "operationId": "list_repos",
                "parameters": [
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/RepoIncludeOptions"
                            }
                        }
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 1
                        }
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RepoListResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/repos/{repo_id}": {
            "patch": {
                "tags": [
                    "repo"
                ],
                "summary": "Update log repository",
                "description": "Requires `repo:write` permission.",
                "operationId": "update_repo",
                "parameters": [
                    {
                        "name": "repo_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RepoUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RepoResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Constraint violation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "repo"
                ],
                "summary": "Get log repository",
                "description": "Requires `repo:read` permission.",
                "operationId": "get_repo_repos__repo_id__get",
                "parameters": [
                    {
                        "name": "repo_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/RepoIncludeOptions"
                            },
                            "default": []
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RepoResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "repo"
                ],
                "summary": "Delete log repository",
                "description": "Requires `repo:write` permission.",
                "operationId": "delete_repo",
                "parameters": [
                    {
                        "name": "repo_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/repos/{repo_id}/translations/{lang}": {
            "get": {
                "tags": [
                    "repo"
                ],
                "summary": "Get log repository translation",
                "description": "Requires `log:read` permission.",
                "operationId": "get_repo_translation",
                "parameters": [
                    {
                        "name": "repo_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "lang",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Lang"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LogLabels"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Create user",
                "description": "Requires `user:write` permission.",
                "operationId": "create_user",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Constraint violation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "List users",
                "description": "Requires `user:read` permission.",
                "operationId": "list_users",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 1
                        }
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserListResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/{user_id}": {
            "patch": {
                "tags": [
                    "user"
                ],
                "summary": "Update user",
                "operationId": "update_user",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Constraint violation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Get user",
                "description": "Requires `user:read` permission.",
                "operationId": "get_user",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "user"
                ],
                "summary": "Delete user",
                "description": "Requires `user:write` permission.",
                "operationId": "delete_user",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Constraint violation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/apikeys": {
            "post": {
                "tags": [
                    "apikey"
                ],
                "summary": "Create API key",
                "description": "Requires `apikey:write` permission.",
                "operationId": "create_apikey",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApikeyCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApikeyCreateResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Constraint violation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "apikey"
                ],
                "summary": "List API keys",
                "description": "Requires `apikey:read` permission.",
                "operationId": "list_apikeys",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 1
                        }
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApikeyListResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/apikeys/{apikey_id}": {
            "patch": {
                "tags": [
                    "apikey"
                ],
                "summary": "Update API key",
                "description": "Requires `apikey:write` permission.",
                "operationId": "update_apikey",
                "parameters": [
                    {
                        "name": "apikey_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApikeyUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApikeyResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Constraint violation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "apikey"
                ],
                "summary": "Get API key",
                "description": "Requires `apikey:read` permission.",
                "operationId": "get_apikey",
                "parameters": [
                    {
                        "name": "apikey_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApikeyResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "apikey"
                ],
                "summary": "Delete API key",
                "description": "Requires `apikey:write` permission.",
                "operationId": "delete_apikey",
                "parameters": [
                    {
                        "name": "apikey_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/apikeys/{apikey_id}/key": {
            "post": {
                "tags": [
                    "apikey"
                ],
                "summary": "Re-generate API key secret",
                "description": "Requires `apikey:write` permission.",
                "operationId": "generate_apikey_new_secret",
                "parameters": [
                    {
                        "name": "apikey_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApikeyRegenerationResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/log-i18n-profiles": {
            "post": {
                "tags": [
                    "log-i18n-profile"
                ],
                "summary": "Create log i18n profile",
                "description": "Requires `repo:write` permission.",
                "operationId": "create_log_i18n_profile",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LogI18nProfileCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LogI18nProfileResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Constraint violation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "log-i18n-profile"
                ],
                "summary": "List log i18n profiles",
                "description": "Requires `repo:read` permission.",
                "operationId": "list_log_i18n_profiles",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 1
                        }
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LogI18nProfileListResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/log-i18n-profiles/{profile_id}": {
            "patch": {
                "tags": [
                    "log-i18n-profile"
                ],
                "summary": "Update log i18n profile",
                "description": "Requires `repo:write` permission.",
                "operationId": "update_log_i18n_profile",
                "parameters": [
                    {
                        "name": "profile_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LogI18nProfileUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LogI18nProfileResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Constraint violation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "log-i18n-profile"
                ],
                "summary": "Get log i18n profile",
                "description": "Requires `repo:read` permission.",
                "operationId": "get_log_i18n_profile",
                "parameters": [
                    {
                        "name": "profile_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LogI18nProfileResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "log-i18n-profile"
                ],
                "summary": "Delete log i18n profile",
                "description": "Requires `repo:write` permission.",
                "operationId": "delete_log_i18n_profile",
                "parameters": [
                    {
                        "name": "profile_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/log-i18n-profiles/{profile_id}/translations/{lang}": {
            "get": {
                "tags": [
                    "log-i18n-profile"
                ],
                "summary": "Get log i18n profile translation",
                "description": "Requires `repo:read` permission.",
                "operationId": "get_log_i18n_profile_translation",
                "parameters": [
                    {
                        "name": "profile_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "lang",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Lang"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LogLabels"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/info": {
            "get": {
                "tags": [
                    "info"
                ],
                "summary": "Get Auditize information",
                "operationId": "info",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InfoResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AccessTokenRequest": {
                "properties": {
                    "permissions": {
                        "$ref": "#/components/schemas/PermissionsInput",
                        "description": "The API key permissions"
                    }
                },
                "type": "object",
                "required": [
                    "permissions"
                ],
                "title": "AccessTokenRequest"
            },
            "AccessTokenResponse": {
                "properties": {
                    "access_token": {
                        "type": "string",
                        "description": "The access token"
                    },
                    "expires_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The access token expiration time"
                    }
                },
                "type": "object",
                "required": [
                    "access_token",
                    "expires_at"
                ],
                "title": "AccessTokenResponse"
            },
            "ApiErrorResponse": {
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "The error message (always in English)",
                        "example": "An error occurred"
                    },
                    "localized_message": {
                        "description": "The localized error message (if available)",
                        "example": "Une erreur est survenue",
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object",
                "required": [
                    "message",
                    "localized_message"
                ],
                "title": "ApiErrorResponse"
            },
            "ApiValidationErrorResponse": {
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "The error message (always in English)",
                        "example": "An error occurred"
                    },
                    "localized_message": {
                        "description": "The localized error message (if available)",
                        "example": "Une erreur est survenue",
                        "type": "string",
                        "nullable": true
                    },
                    "validation_errors": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationErrorDetail"
                        },
                        "type": "array"
                    }
                },
                "type": "object",
                "required": [
                    "message",
                    "localized_message",
                    "validation_errors"
                ],
                "title": "ApiValidationErrorResponse",
                "example": {
                    "message": "Invalid request",
                    "validation_errors": [
                        {
                            "field": "field1",
                            "message": "Error message 1"
                        },
                        {
                            "field": "field2",
                            "message": "Error message 2"
                        }
                    ]
                }
            },
            "ApikeyCreate": {
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The API key name",
                        "example": "Integration API key"
                    },
                    "permissions": {
                        "$ref": "#/components/schemas/PermissionsInput",
                        "description": "The API key permissions"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ],
                "title": "ApikeyCreate"
            },
            "ApikeyCreateResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "API key ID",
                        "example": "FEC4A4E6-AC13-455F-A0F8-E71AA0C37B7D"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The creation date",
                        "example": "2021-10-12T09:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The last update date",
                        "example": "2021-10-12T09:00:00Z"
                    },
                    "name": {
                        "type": "string",
                        "description": "The API key name",
                        "example": "Integration API key"
                    },
                    "permissions": {
                        "$ref": "#/components/schemas/PermissionsOutput",
                        "description": "The API key permissions"
                    },
                    "key": {
                        "type": "string",
                        "description": "The API key secret",
                        "example": "aak-_euGzb85ZisAZtwx8d78NtC1ohK5suU7-u_--jIENlU"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "created_at",
                    "updated_at",
                    "name",
                    "permissions",
                    "key"
                ],
                "title": "ApikeyCreateResponse"
            },
            "ApikeyListResponse": {
                "properties": {
                    "pagination": {
                        "$ref": "#/components/schemas/PagePaginationInfo",
                        "description": "Page-based pagination information"
                    },
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/ApikeyResponse"
                        },
                        "type": "array",
                        "description": "List of items"
                    }
                },
                "type": "object",
                "required": [
                    "pagination",
                    "items"
                ],
                "title": "ApikeyListResponse"
            },
            "ApikeyRegenerationResponse": {
                "properties": {
                    "key": {
                        "type": "string",
                        "description": "The new API key secret",
                        "example": "aak-_euGzb85ZisAZtwx8d78NtC1ohK5suU7-u_--jIENlU"
                    }
                },
                "type": "object",
                "required": [
                    "key"
                ],
                "title": "ApikeyRegenerationResponse"
            },
            "ApikeyResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "API key ID",
                        "example": "FEC4A4E6-AC13-455F-A0F8-E71AA0C37B7D"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The creation date",
                        "example": "2021-10-12T09:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The last update date",
                        "example": "2021-10-12T09:00:00Z"
                    },
                    "name": {
                        "type": "string",
                        "description": "The API key name",
                        "example": "Integration API key"
                    },
                    "permissions": {
                        "$ref": "#/components/schemas/PermissionsOutput",
                        "description": "The API key permissions"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "created_at",
                    "updated_at",
                    "name",
                    "permissions"
                ],
                "title": "ApikeyResponse"
            },
            "ApikeyUpdate": {
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The API key name",
                        "example": "Integration API key"
                    },
                    "permissions": {
                        "$ref": "#/components/schemas/PermissionsInput",
                        "description": "The API key permissions"
                    }
                },
                "type": "object",
                "title": "ApikeyUpdate"
            },
            "Body_add_log_attachment": {
                "properties": {
                    "file": {
                        "type": "string",
                        "format": "binary"
                    },
                    "type": {
                        "type": "string",
                        "pattern": "^[a-z0-9-]+$",
                        "description": "The 'functional' type of the attachment",
                        "example": "Configuration file"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the attachment. If not provided, the name of the uploaded file will be used.",
                        "example": "config.json"
                    },
                    "mime_type": {
                        "type": "string",
                        "description": "The MIME type of the attachment. If not provided, the MIME type of the uploaded file will be used.",
                        "example": "application/json"
                    }
                },
                "type": "object",
                "required": [
                    "file",
                    "type"
                ],
                "title": "Body_add_log_attachment"
            },
            "CursorPaginationData": {
                "properties": {
                    "next_cursor": {
                        "description": "The cursor to the next page of results. It must be passed as the 'cursor' parameter to the next query to get the next page of results. 'next_cursor' will be null if there are no more results to fetch.",
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object",
                "required": [
                    "next_cursor"
                ],
                "title": "CursorPaginationData"
            },
            "HTTPValidationError": {
                "properties": {
                    "detail": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "type": "array"
                    }
                },
                "type": "object",
                "title": "HTTPValidationError"
            },
            "InfoResponse": {
                "properties": {
                    "auditize_version": {
                        "type": "string",
                        "description": "The version of Auditize in a `x.y.z` format",
                        "example": "0.7.1"
                    }
                },
                "type": "object",
                "required": [
                    "auditize_version"
                ],
                "title": "InfoResponse"
            },
            "Lang": {
                "type": "string",
                "enum": [
                    "en",
                    "fr"
                ],
                "title": "Lang"
            },
            "LogCreate": {
                "properties": {
                    "action": {
                        "$ref": "#/components/schemas/_ActionData",
                        "description": "Action information"
                    },
                    "source": {
                        "items": {
                            "$ref": "#/components/schemas/_CustomFieldData"
                        },
                        "type": "array",
                        "description": "Various information about the source of the event such as IP address, User-Agent, etc...",
                        "example": [
                            {
                                "name": "ip",
                                "value": "127.0.0.1"
                            },
                            {
                                "name": "user-agent",
                                "value": "Mozilla/5.0"
                            }
                        ]
                    },
                    "actor": {
                        "description": "Actor information",
                        "$ref": "#/components/schemas/_ActorInputData",
                        "nullable": true
                    },
                    "resource": {
                        "description": "Resource information",
                        "$ref": "#/components/schemas/_ResourceInputData",
                        "nullable": true
                    },
                    "details": {
                        "items": {
                            "$ref": "#/components/schemas/_CustomFieldData"
                        },
                        "type": "array",
                        "description": "Details about the action",
                        "example": [
                            {
                                "name": "field-name-1",
                                "value": "value 1"
                            },
                            {
                                "name": "field-name-2",
                                "value": "value 2"
                            }
                        ]
                    },
                    "tags": {
                        "items": {
                            "$ref": "#/components/schemas/_TagInputData"
                        },
                        "type": "array"
                    },
                    "entity_path": {
                        "items": {
                            "$ref": "#/components/schemas/_EntityPathNodeData"
                        },
                        "type": "array",
                        "description": "Represents the complete path of the entity that the log is associated with.This array must at least contain one item.",
                        "example": [
                            {
                                "name": "Customer 1",
                                "ref": "customer:1"
                            },
                            {
                                "name": "Entity 1",
                                "ref": "entity:1"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "action",
                    "entity_path"
                ],
                "title": "LogCreate"
            },
            "LogEntityListResponse": {
                "properties": {
                    "pagination": {
                        "$ref": "#/components/schemas/CursorPaginationData",
                        "description": "Cursor-based pagination information"
                    },
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/LogEntityResponse"
                        },
                        "type": "array",
                        "description": "List of items"
                    }
                },
                "type": "object",
                "required": [
                    "pagination",
                    "items"
                ],
                "title": "LogEntityListResponse"
            },
            "LogEntityResponse": {
                "properties": {
                    "ref": {
                        "type": "string",
                        "description": "Entity ref"
                    },
                    "name": {
                        "type": "string",
                        "description": "Entity name"
                    },
                    "parent_entity_ref": {
                        "description": "The ID of the parent entity. It is null for top-level entities.",
                        "type": "string",
                        "nullable": true
                    },
                    "has_children": {
                        "type": "boolean",
                        "description": "Indicates whether the entity has children or not"
                    }
                },
                "type": "object",
                "required": [
                    "ref",
                    "name",
                    "parent_entity_ref",
                    "has_children"
                ],
                "title": "LogEntityResponse",
                "example": {
                    "has_children": true,
                    "name": "Entity 1",
                    "parent_entity_ref": "customer:1",
                    "ref": "entity:1"
                }
            },
            "LogI18nProfileCreate": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "translations": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/LogLabels"
                        },
                        "propertyNames": {
                            "$ref": "#/components/schemas/Lang"
                        },
                        "type": "object"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ],
                "title": "LogI18nProfileCreate"
            },
            "LogI18nProfileListResponse": {
                "properties": {
                    "pagination": {
                        "$ref": "#/components/schemas/PagePaginationInfo",
                        "description": "Page-based pagination information"
                    },
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/LogI18nProfileResponse"
                        },
                        "type": "array",
                        "description": "List of items"
                    }
                },
                "type": "object",
                "required": [
                    "pagination",
                    "items"
                ],
                "title": "LogI18nProfileListResponse"
            },
            "LogI18nProfileResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Profile ID",
                        "example": "FEC4A4E6-AC13-455F-A0F8-E71AA0C37B7D"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The creation date",
                        "example": "2021-10-12T09:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The last update date",
                        "example": "2021-10-12T09:00:00Z"
                    },
                    "name": {
                        "type": "string"
                    },
                    "translations": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/LogLabels"
                        },
                        "propertyNames": {
                            "$ref": "#/components/schemas/Lang"
                        },
                        "type": "object"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "created_at",
                    "updated_at",
                    "name"
                ],
                "title": "LogI18nProfileResponse"
            },
            "LogI18nProfileUpdate": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "translations": {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/LogLabels"
                                },
                                {
                                    "type": "null"
                                }
                            ]
                        },
                        "propertyNames": {
                            "$ref": "#/components/schemas/Lang"
                        },
                        "type": "object"
                    }
                },
                "type": "object",
                "title": "LogI18nProfileUpdate"
            },
            "LogLabels": {
                "properties": {
                    "action_type": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "action_category": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "actor_type": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "actor_custom_field": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "source_field": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "detail_field": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "resource_type": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "resource_custom_field": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "tag_type": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "attachment_type": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    }
                },
                "additionalProperties": false,
                "type": "object",
                "title": "LogLabels"
            },
            "LogListResponse": {
                "properties": {
                    "pagination": {
                        "$ref": "#/components/schemas/CursorPaginationData",
                        "description": "Cursor-based pagination information"
                    },
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/LogResponse"
                        },
                        "type": "array",
                        "description": "List of items"
                    }
                },
                "type": "object",
                "required": [
                    "pagination",
                    "items"
                ],
                "title": "LogListResponse"
            },
            "LogPermissionsInput": {
                "properties": {
                    "read": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "write": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "repos": {
                        "items": {
                            "$ref": "#/components/schemas/RepoLogPermissionsInput"
                        },
                        "type": "array"
                    }
                },
                "type": "object",
                "title": "LogPermissionsInput"
            },
            "LogPermissionsOutput": {
                "properties": {
                    "read": {
                        "type": "boolean"
                    },
                    "write": {
                        "type": "boolean"
                    },
                    "repos": {
                        "items": {
                            "$ref": "#/components/schemas/RepoLogPermissionsOutput"
                        },
                        "type": "array"
                    }
                },
                "type": "object",
                "required": [
                    "read",
                    "write",
                    "repos"
                ],
                "title": "LogPermissionsOutput"
            },
            "LogResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Log ID",
                        "example": "FEC4A4E6-AC13-455F-A0F8-E71AA0C37B7D"
                    },
                    "action": {
                        "$ref": "#/components/schemas/_ActionData",
                        "description": "Action information"
                    },
                    "source": {
                        "items": {
                            "$ref": "#/components/schemas/_CustomFieldData"
                        },
                        "type": "array",
                        "description": "Various information about the source of the event such as IP address, User-Agent, etc...",
                        "example": [
                            {
                                "name": "ip",
                                "value": "127.0.0.1"
                            },
                            {
                                "name": "user-agent",
                                "value": "Mozilla/5.0"
                            }
                        ]
                    },
                    "actor": {
                        "description": "Actor information",
                        "$ref": "#/components/schemas/_ActorOutputData",
                        "nullable": true
                    },
                    "resource": {
                        "description": "Resource information",
                        "$ref": "#/components/schemas/_ResourceOutputData",
                        "nullable": true
                    },
                    "details": {
                        "items": {
                            "$ref": "#/components/schemas/_CustomFieldData"
                        },
                        "type": "array",
                        "description": "Details about the action",
                        "example": [
                            {
                                "name": "field-name-1",
                                "value": "value 1"
                            },
                            {
                                "name": "field-name-2",
                                "value": "value 2"
                            }
                        ]
                    },
                    "tags": {
                        "items": {
                            "$ref": "#/components/schemas/_TagOutputData"
                        },
                        "type": "array"
                    },
                    "entity_path": {
                        "items": {
                            "$ref": "#/components/schemas/_EntityPathNodeData"
                        },
                        "type": "array",
                        "description": "Represents the complete path of the entity that the log is associated with.This array must at least contain one item.",
                        "example": [
                            {
                                "name": "Customer 1",
                                "ref": "customer:1"
                            },
                            {
                                "name": "Entity 1",
                                "ref": "entity:1"
                            }
                        ]
                    },
                    "attachments": {
                        "items": {
                            "$ref": "#/components/schemas/_AttachmentData"
                        },
                        "type": "array"
                    },
                    "saved_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "action",
                    "source",
                    "actor",
                    "resource",
                    "details",
                    "tags",
                    "entity_path",
                    "attachments",
                    "saved_at"
                ],
                "title": "LogResponse"
            },
            "ManagementPermissionsInput": {
                "properties": {
                    "repos": {
                        "$ref": "#/components/schemas/ReadWritePermissionsInput"
                    },
                    "users": {
                        "$ref": "#/components/schemas/ReadWritePermissionsInput"
                    },
                    "apikeys": {
                        "$ref": "#/components/schemas/ReadWritePermissionsInput"
                    }
                },
                "type": "object",
                "title": "ManagementPermissionsInput"
            },
            "ManagementPermissionsOutput": {
                "properties": {
                    "repos": {
                        "$ref": "#/components/schemas/ReadWritePermissionsOutput"
                    },
                    "users": {
                        "$ref": "#/components/schemas/ReadWritePermissionsOutput"
                    },
                    "apikeys": {
                        "$ref": "#/components/schemas/ReadWritePermissionsOutput"
                    }
                },
                "type": "object",
                "title": "ManagementPermissionsOutput"
            },
            "NameData": {
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ],
                "title": "NameData"
            },
            "NameListResponse": {
                "properties": {
                    "pagination": {
                        "$ref": "#/components/schemas/CursorPaginationData",
                        "description": "Cursor-based pagination information"
                    },
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/NameData"
                        },
                        "type": "array",
                        "description": "List of items"
                    }
                },
                "type": "object",
                "required": [
                    "pagination",
                    "items"
                ],
                "title": "NameListResponse",
                "example": {
                    "items": [
                        {
                            "name": "identifier-1"
                        },
                        {
                            "name": "identifier-2"
                        }
                    ],
                    "pagination": {}
                }
            },
            "PagePaginationInfo": {
                "properties": {
                    "page": {
                        "type": "integer",
                        "description": "The current page number",
                        "example": 1
                    },
                    "page_size": {
                        "type": "integer",
                        "description": "The number of items per page",
                        "example": 10
                    },
                    "total": {
                        "type": "integer",
                        "description": "The total number of items",
                        "example": 50
                    },
                    "total_pages": {
                        "type": "integer",
                        "description": "The total number of pages",
                        "example": 5
                    }
                },
                "type": "object",
                "required": [
                    "page",
                    "page_size",
                    "total",
                    "total_pages"
                ],
                "title": "PagePaginationInfo"
            },
            "PermissionsInput": {
                "properties": {
                    "is_superadmin": {
                        "description": "Superadmin has all permissions",
                        "type": "boolean",
                        "nullable": true
                    },
                    "logs": {
                        "$ref": "#/components/schemas/LogPermissionsInput",
                        "description": "Log permissions"
                    },
                    "management": {
                        "$ref": "#/components/schemas/ManagementPermissionsInput",
                        "description": "Management permissions"
                    }
                },
                "type": "object",
                "title": "PermissionsInput",
                "example": {
                    "example": {
                        "is_superadmin": false,
                        "logs": {
                            "read": true,
                            "repos": [
                                {
                                    "read": false,
                                    "repo_id": "DCFB6049-3BB7-49C5-94A9-64FC9226AE30",
                                    "write": false
                                },
                                {
                                    "read": false,
                                    "repo_id": "E3D38457-670B-42EE-AF1B-10FA90597E68",
                                    "write": true
                                }
                            ],
                            "write": false
                        },
                        "management": {
                            "apikeys": {
                                "read": false,
                                "write": false
                            },
                            "repos": {
                                "read": true,
                                "write": false
                            },
                            "users": {
                                "read": true,
                                "write": true
                            }
                        }
                    }
                }
            },
            "PermissionsOutput": {
                "properties": {
                    "is_superadmin": {
                        "type": "boolean",
                        "description": "Superadmin has all permissions"
                    },
                    "logs": {
                        "$ref": "#/components/schemas/LogPermissionsOutput",
                        "description": "Log permissions"
                    },
                    "management": {
                        "$ref": "#/components/schemas/ManagementPermissionsOutput",
                        "description": "Management permissions"
                    }
                },
                "type": "object",
                "required": [
                    "is_superadmin",
                    "logs",
                    "management"
                ],
                "title": "PermissionsOutput",
                "example": {
                    "example": {
                        "is_superadmin": false,
                        "logs": {
                            "read": true,
                            "repos": [
                                {
                                    "read": false,
                                    "repo_id": "DCFB6049-3BB7-49C5-94A9-64FC9226AE30",
                                    "write": false
                                },
                                {
                                    "read": false,
                                    "repo_id": "E3D38457-670B-42EE-AF1B-10FA90597E68",
                                    "write": true
                                }
                            ],
                            "write": false
                        },
                        "management": {
                            "apikeys": {
                                "read": false,
                                "write": false
                            },
                            "repos": {
                                "read": true,
                                "write": false
                            },
                            "users": {
                                "read": true,
                                "write": true
                            }
                        }
                    }
                }
            },
            "ReadWritePermissionsInput": {
                "properties": {
                    "read": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "write": {
                        "type": "boolean",
                        "nullable": true
                    }
                },
                "type": "object",
                "title": "ReadWritePermissionsInput"
            },
            "ReadWritePermissionsOutput": {
                "properties": {
                    "read": {
                        "type": "boolean"
                    },
                    "write": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "read",
                    "write"
                ],
                "title": "ReadWritePermissionsOutput"
            },
            "RepoCreate": {
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The repository name",
                        "example": "My repository"
                    },
                    "status": {
                        "$ref": "#/components/schemas/RepoStatus",
                        "description": "The repository status",
                        "default": "enabled",
                        "example": "enabled"
                    },
                    "retention_period": {
                        "description": "The repository retention period in days",
                        "example": 30,
                        "type": "integer",
                        "minimum": 1.0,
                        "nullable": true
                    },
                    "log_i18n_profile_id": {
                        "description": "Log i18n profile ID",
                        "example": "FEC4A4E6-AC13-455F-A0F8-E71AA0C37B7D",
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ],
                "title": "RepoCreate"
            },
            "RepoIncludeOptions": {
                "type": "string",
                "enum": [
                    "stats"
                ],
                "title": "RepoIncludeOptions"
            },
            "RepoListResponse": {
                "properties": {
                    "pagination": {
                        "$ref": "#/components/schemas/PagePaginationInfo",
                        "description": "Page-based pagination information"
                    },
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/RepoResponse"
                        },
                        "type": "array",
                        "description": "List of items"
                    }
                },
                "type": "object",
                "required": [
                    "pagination",
                    "items"
                ],
                "title": "RepoListResponse"
            },
            "RepoLogPermissionsInput": {
                "properties": {
                    "read": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "write": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "repo_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "readable_entities": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "nullable": true
                    }
                },
                "type": "object",
                "required": [
                    "repo_id"
                ],
                "title": "RepoLogPermissionsInput"
            },
            "RepoLogPermissionsOutput": {
                "properties": {
                    "read": {
                        "type": "boolean"
                    },
                    "write": {
                        "type": "boolean"
                    },
                    "repo_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "readable_entities": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "type": "object",
                "required": [
                    "read",
                    "write",
                    "repo_id",
                    "readable_entities"
                ],
                "title": "RepoLogPermissionsOutput"
            },
            "RepoResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Repository ID",
                        "example": "FEC4A4E6-AC13-455F-A0F8-E71AA0C37B7D"
                    },
                    "name": {
                        "type": "string",
                        "description": "The repository name",
                        "example": "My repository"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The creation date",
                        "example": "2021-10-12T09:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The last update date",
                        "example": "2021-10-12T09:00:00Z"
                    },
                    "status": {
                        "$ref": "#/components/schemas/RepoStatus",
                        "description": "The repository status",
                        "example": "enabled"
                    },
                    "retention_period": {
                        "description": "The repository retention period in days",
                        "example": 30,
                        "type": "integer",
                        "minimum": 1.0,
                        "nullable": true
                    },
                    "log_i18n_profile_id": {
                        "description": "Log i18n profile ID",
                        "example": "FEC4A4E6-AC13-455F-A0F8-E71AA0C37B7D",
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "stats": {
                        "description": "The repository stats (available if `include=stats` has been set in query parameters)",
                        "$ref": "#/components/schemas/RepoStats",
                        "nullable": true
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "created_at",
                    "updated_at",
                    "status",
                    "retention_period",
                    "log_i18n_profile_id"
                ],
                "title": "RepoResponse"
            },
            "RepoStats": {
                "properties": {
                    "first_log_date": {
                        "description": "The first log date",
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "last_log_date": {
                        "description": "The last log date",
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "log_count": {
                        "type": "integer",
                        "description": "The log count",
                        "default": 0
                    },
                    "storage_size": {
                        "type": "integer",
                        "description": "The database storage size",
                        "default": 0
                    }
                },
                "type": "object",
                "title": "RepoStats",
                "example": {
                    "first_log_date": "2024-01-01T00:00:00Z",
                    "last_log_date": "2024-01-03T00:00:00Z",
                    "log_count": 1000,
                    "storage_size": 100889890
                }
            },
            "RepoStatus": {
                "type": "string",
                "enum": [
                    "enabled",
                    "readonly",
                    "disabled"
                ],
                "title": "RepoStatus"
            },
            "RepoUpdate": {
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The repository name",
                        "example": "My repository"
                    },
                    "status": {
                        "$ref": "#/components/schemas/RepoStatus",
                        "description": "The repository status",
                        "example": "enabled"
                    },
                    "retention_period": {
                        "description": "The repository retention period in days",
                        "example": 30,
                        "type": "integer",
                        "minimum": 1.0,
                        "nullable": true
                    },
                    "log_i18n_profile_id": {
                        "description": "Log i18n profile ID",
                        "example": "FEC4A4E6-AC13-455F-A0F8-E71AA0C37B7D",
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    }
                },
                "type": "object",
                "title": "RepoUpdate"
            },
            "UserCreate": {
                "properties": {
                    "first_name": {
                        "type": "string",
                        "description": "The user first name",
                        "example": "John"
                    },
                    "last_name": {
                        "type": "string",
                        "description": "The user last name",
                        "example": "Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "description": "The user email",
                        "example": "john.doe@example.net"
                    },
                    "lang": {
                        "$ref": "#/components/schemas/Lang",
                        "description": "The user language",
                        "default": "en",
                        "example": "en"
                    },
                    "permissions": {
                        "$ref": "#/components/schemas/PermissionsInput",
                        "description": "The user permissions"
                    }
                },
                "type": "object",
                "required": [
                    "first_name",
                    "last_name",
                    "email"
                ],
                "title": "UserCreate"
            },
            "UserListResponse": {
                "properties": {
                    "pagination": {
                        "$ref": "#/components/schemas/PagePaginationInfo",
                        "description": "Page-based pagination information"
                    },
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/UserResponse"
                        },
                        "type": "array",
                        "description": "List of items"
                    }
                },
                "type": "object",
                "required": [
                    "pagination",
                    "items"
                ],
                "title": "UserListResponse"
            },
            "UserResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "User ID",
                        "example": "FEC4A4E6-AC13-455F-A0F8-E71AA0C37B7D"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The creation date",
                        "example": "2021-10-12T09:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The last update date",
                        "example": "2021-10-12T09:00:00Z"
                    },
                    "first_name": {
                        "type": "string",
                        "description": "The user first name",
                        "example": "John"
                    },
                    "last_name": {
                        "type": "string",
                        "description": "The user last name",
                        "example": "Doe"
                    },
                    "email": {
                        "type": "string",
                        "description": "The user email",
                        "example": "john.doe@example.net"
                    },
                    "lang": {
                        "$ref": "#/components/schemas/Lang",
                        "description": "The user language",
                        "default": "en",
                        "example": "en"
                    },
                    "permissions": {
                        "$ref": "#/components/schemas/PermissionsOutput",
                        "description": "The user permissions"
                    },
                    "authenticated_at": {
                        "description": "The date at which the user authenticated for the last time",
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "created_at",
                    "updated_at",
                    "first_name",
                    "last_name",
                    "email",
                    "permissions",
                    "authenticated_at"
                ],
                "title": "UserResponse"
            },
            "UserUpdateRequest": {
                "properties": {
                    "first_name": {
                        "type": "string",
                        "description": "The user first name",
                        "example": "John"
                    },
                    "last_name": {
                        "type": "string",
                        "description": "The user last name",
                        "example": "Doe"
                    },
                    "email": {
                        "type": "string",
                        "description": "The user email",
                        "example": "john.doe@example.net"
                    },
                    "lang": {
                        "$ref": "#/components/schemas/Lang",
                        "description": "The user language",
                        "example": "en"
                    },
                    "permissions": {
                        "$ref": "#/components/schemas/PermissionsInput",
                        "description": "The user permissions"
                    }
                },
                "type": "object",
                "title": "UserUpdateRequest"
            },
            "ValidationError": {
                "properties": {
                    "loc": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "type": "array"
                    },
                    "msg": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "title": "ValidationError"
            },
            "ValidationErrorDetail": {
                "properties": {
                    "field": {
                        "type": "string",
                        "nullable": true
                    },
                    "message": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "field",
                    "message"
                ],
                "title": "ValidationErrorDetail"
            },
            "_ActionData": {
                "properties": {
                    "type": {
                        "type": "string",
                        "pattern": "^[a-z0-9-]+$",
                        "description": "Action type",
                        "example": "create-configuration-profile"
                    },
                    "category": {
                        "type": "string",
                        "pattern": "^[a-z0-9-]+$",
                        "description": "Action category",
                        "example": "configuration"
                    }
                },
                "type": "object",
                "required": [
                    "type",
                    "category"
                ],
                "title": "_ActionData"
            },
            "_ActorInputData": {
                "properties": {
                    "ref": {
                        "type": "string",
                        "description": "Actor ref must be unique for a given actor",
                        "example": "user:123"
                    },
                    "type": {
                        "type": "string",
                        "pattern": "^[a-z0-9-]+$",
                        "description": "Actor type",
                        "example": "user"
                    },
                    "name": {
                        "type": "string",
                        "description": "Actor name",
                        "example": "John Doe"
                    },
                    "extra": {
                        "items": {
                            "$ref": "#/components/schemas/_CustomFieldData"
                        },
                        "type": "array",
                        "description": "Extra actor information",
                        "example": [
                            {
                                "name": "role",
                                "value": "admin"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "ref",
                    "type",
                    "name"
                ],
                "title": "_ActorInputData"
            },
            "_ActorOutputData": {
                "properties": {
                    "ref": {
                        "type": "string",
                        "description": "Actor ref must be unique for a given actor",
                        "example": "user:123"
                    },
                    "type": {
                        "type": "string",
                        "pattern": "^[a-z0-9-]+$",
                        "description": "Actor type",
                        "example": "user"
                    },
                    "name": {
                        "type": "string",
                        "description": "Actor name",
                        "example": "John Doe"
                    },
                    "extra": {
                        "items": {
                            "$ref": "#/components/schemas/_CustomFieldData"
                        },
                        "type": "array",
                        "description": "Extra actor information",
                        "example": [
                            {
                                "name": "role",
                                "value": "admin"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "ref",
                    "type",
                    "name",
                    "extra"
                ],
                "title": "_ActorOutputData"
            },
            "_AttachmentData": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "mime_type": {
                        "type": "string"
                    },
                    "saved_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "type",
                    "mime_type",
                    "saved_at"
                ],
                "title": "_AttachmentData"
            },
            "_CustomFieldData": {
                "properties": {
                    "name": {
                        "type": "string",
                        "pattern": "^[a-z0-9-]+$",
                        "description": "Field name"
                    },
                    "value": {
                        "type": "string",
                        "description": "Field value"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "value"
                ],
                "title": "_CustomFieldData"
            },
            "_EntityPathNodeData": {
                "properties": {
                    "ref": {
                        "type": "string",
                        "description": "Entity ref"
                    },
                    "name": {
                        "type": "string",
                        "description": "Entity name"
                    }
                },
                "type": "object",
                "required": [
                    "ref",
                    "name"
                ],
                "title": "_EntityPathNodeData"
            },
            "_ResourceInputData": {
                "properties": {
                    "ref": {
                        "type": "string",
                        "description": "Resource ref must be unique for a given resource",
                        "example": "config-profile:123"
                    },
                    "type": {
                        "type": "string",
                        "pattern": "^[a-z0-9-]+$",
                        "description": "Resource type",
                        "example": "config-profile"
                    },
                    "name": {
                        "type": "string",
                        "description": "Resource name",
                        "example": "Config Profile 123"
                    },
                    "extra": {
                        "items": {
                            "$ref": "#/components/schemas/_CustomFieldData"
                        },
                        "type": "array",
                        "description": "Extra resource information",
                        "example": [
                            {
                                "name": "description",
                                "value": "Description of the configuration profile"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "ref",
                    "type",
                    "name"
                ],
                "title": "_ResourceInputData"
            },
            "_ResourceOutputData": {
                "properties": {
                    "ref": {
                        "type": "string",
                        "description": "Resource ref must be unique for a given resource",
                        "example": "config-profile:123"
                    },
                    "type": {
                        "type": "string",
                        "pattern": "^[a-z0-9-]+$",
                        "description": "Resource type",
                        "example": "config-profile"
                    },
                    "name": {
                        "type": "string",
                        "description": "Resource name",
                        "example": "Config Profile 123"
                    },
                    "extra": {
                        "items": {
                            "$ref": "#/components/schemas/_CustomFieldData"
                        },
                        "type": "array",
                        "description": "Extra resource information",
                        "example": [
                            {
                                "name": "description",
                                "value": "Description of the configuration profile"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "ref",
                    "type",
                    "name",
                    "extra"
                ],
                "title": "_ResourceOutputData"
            },
            "_TagInputData": {
                "properties": {
                    "ref": {
                        "description": "Tag ref is required for 'rich' tags",
                        "type": "string",
                        "nullable": true
                    },
                    "type": {
                        "type": "string",
                        "pattern": "^[a-z0-9-]+$",
                        "description": "If only type is set then it represents a 'simple' tag"
                    },
                    "name": {
                        "description": "Tag name is required for 'rich' tags",
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object",
                "required": [
                    "type"
                ],
                "title": "_TagInputData",
                "examples": [
                    {
                        "type": "security"
                    },
                    {
                        "name": "Config Profile 123",
                        "ref": "config-profile:123",
                        "type": "config-profile"
                    }
                ]
            },
            "_TagOutputData": {
                "properties": {
                    "ref": {
                        "description": "Tag ref is required for 'rich' tags",
                        "type": "string",
                        "nullable": true
                    },
                    "type": {
                        "type": "string",
                        "pattern": "^[a-z0-9-]+$",
                        "description": "If only type is set then it represents a 'simple' tag"
                    },
                    "name": {
                        "description": "Tag name is required for 'rich' tags",
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object",
                "required": [
                    "ref",
                    "type",
                    "name"
                ],
                "title": "_TagOutputData",
                "examples": [
                    {
                        "type": "security"
                    },
                    {
                        "name": "Config Profile 123",
                        "ref": "config-profile:123",
                        "type": "config-profile"
                    }
                ]
            }
        },
        "securitySchemes": {
            "apikeyAuth": {
                "type": "http",
                "scheme": "bearer",
                "description": "The API client must be authenticated through an API key. API keys can be obtained through the Auditize user interface. An API key looks like `aak-ewTddehtMoRjBYtbKzaLy8jqn0hZmh78_iy5Ohg_x4Y` (API keys are always prefixed with `aak-`)"
            }
        }
    },
    "tags": [
        {
            "name": "auth",
            "description": "Authentication"
        },
        {
            "name": "user",
            "description": "User management"
        },
        {
            "name": "apikey",
            "description": "API key management"
        },
        {
            "name": "repo",
            "description": "Repository management"
        },
        {
            "name": "log-i18n-profile",
            "description": "Log i18n profile management"
        },
        {
            "name": "log",
            "description": "Log API"
        },
        {
            "name": "info",
            "description": "Information API"
        }
    ],
    "security": [
        {
            "apikeyAuth": []
        }
    ]
}
